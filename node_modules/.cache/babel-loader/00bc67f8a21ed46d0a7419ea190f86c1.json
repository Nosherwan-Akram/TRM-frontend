{"ast":null,"code":"var _jsxFileName = \"/home/noshu/react/test1/src/components/authentication.js\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport React from \"react\";\nexport const UserRoute = ({\n  children,\n  ...rest\n}) => {\n  let token = getToken();\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: ({\n      location\n    }) => {\n      return token ? children : /*#__PURE__*/React.createElement(Redirect, {\n        to: {\n          pathname: \"/login\",\n          state: {\n            from: location\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 11\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }\n  }));\n};\nexport const GuestRoute = ({\n  children,\n  ...rest\n}) => {\n  let token = getToken();\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: ({\n      location\n    }) => {\n      return token ? /*#__PURE__*/React.createElement(Redirect, {\n        to: {\n          pathname: \"/\",\n          state: {\n            from: location\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }\n      }) : children;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }));\n};\nexport const getToken = () => {\n  return localStorage.getItem(\"token\") ? localStorage.getItem(\"token\") : null;\n};\nexport const getRole = () => {\n  return localStorage.getItem(\"role\") ? localStorage.getItem(\"role\") : null;\n};","map":{"version":3,"sources":["/home/noshu/react/test1/src/components/authentication.js"],"names":["Route","Redirect","React","UserRoute","children","rest","token","getToken","location","pathname","state","from","GuestRoute","localStorage","getItem","getRole"],"mappings":";AAAA,SAASA,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAY,KAAGC;AAAf,CAAD,KAA2B;AAClD,MAAIC,KAAK,GAAGC,QAAQ,EAApB;AAEA,sBACE,oBAAC,KAAD,oBACMF,IADN;AAEE,IAAA,MAAM,EAAE,CAAC;AAAEG,MAAAA;AAAF,KAAD,KAAkB;AACxB,aAAOF,KAAK,GACVF,QADU,gBAGV,oBAAC,QAAD;AACE,QAAA,EAAE,EAAE;AACFK,UAAAA,QAAQ,EAAE,QADR;AAEFC,UAAAA,KAAK,EAAE;AAAEC,YAAAA,IAAI,EAAEH;AAAR;AAFL,SADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF;AAUD,KAbH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAiBD,CApBM;AAsBP,OAAO,MAAMI,UAAU,GAAG,CAAC;AAAER,EAAAA,QAAF;AAAY,KAAGC;AAAf,CAAD,KAA2B;AACnD,MAAIC,KAAK,GAAGC,QAAQ,EAApB;AACA,sBACE,oBAAC,KAAD,oBACMF,IADN;AAEE,IAAA,MAAM,EAAE,CAAC;AAAEG,MAAAA;AAAF,KAAD,KAAkB;AACxB,aAAOF,KAAK,gBACV,oBAAC,QAAD;AACE,QAAA,EAAE,EAAE;AACFG,UAAAA,QAAQ,EAAE,GADR;AAEFC,UAAAA,KAAK,EAAE;AAAEC,YAAAA,IAAI,EAAEH;AAAR;AAFL,SADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADU,GAQVJ,QARF;AAUD,KAbH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAiBD,CAnBM;AAqBP,OAAO,MAAMG,QAAQ,GAAG,MAAM;AAC5B,SAAOM,YAAY,CAACC,OAAb,CAAqB,OAArB,IAAgCD,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAhC,GAAgE,IAAvE;AACD,CAFM;AAIP,OAAO,MAAMC,OAAO,GAAG,MAAM;AAC3B,SAAOF,YAAY,CAACC,OAAb,CAAqB,MAArB,IAA+BD,YAAY,CAACC,OAAb,CAAqB,MAArB,CAA/B,GAA8D,IAArE;AACD,CAFM","sourcesContent":["import { Route, Redirect } from \"react-router-dom\";\nimport React from \"react\";\nexport const UserRoute = ({ children, ...rest }) => {\n  let token = getToken();\n\n  return (\n    <Route\n      {...rest}\n      render={({ location }) => {\n        return token ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/login\",\n              state: { from: location },\n            }}\n          />\n        );\n      }}\n    />\n  );\n};\n\nexport const GuestRoute = ({ children, ...rest }) => {\n  let token = getToken();\n  return (\n    <Route\n      {...rest}\n      render={({ location }) => {\n        return token ? (\n          <Redirect\n            to={{\n              pathname: \"/\",\n              state: { from: location },\n            }}\n          />\n        ) : (\n          children\n        );\n      }}\n    />\n  );\n};\n\nexport const getToken = () => {\n  return localStorage.getItem(\"token\") ? localStorage.getItem(\"token\") : null;\n};\n\nexport const getRole = () => {\n  return localStorage.getItem(\"role\") ? localStorage.getItem(\"role\") : null;\n};\n"]},"metadata":{},"sourceType":"module"}