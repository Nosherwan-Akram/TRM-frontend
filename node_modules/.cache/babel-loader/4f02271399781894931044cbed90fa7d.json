{"ast":null,"code":"var _jsxFileName = \"/home/noshu/react/test1/src/components/mainTemplate.js\";\nimport React, { Component } from \"react\";\nimport ReactTable from \"react-table-6\";\nimport { Redirect } from \"react-router-dom\";\n\nclass MainTemplate extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      posts: [],\n      dam: [],\n      imgFile: null,\n      logout: false,\n      gotoFiles: false,\n      fileName: \"output\",\n      uploaded: false\n    };\n\n    this.fileHandler = event => {\n      this.setState({\n        imgFile: event.target.files[0]\n      });\n    };\n\n    this.fileUpload = () => {\n      const fd = new FormData();\n      fd.append(\"Image\", this.state.imgFile, \"test.jpg\");\n      const url = \"http://localhost:5000/api/uploads\";\n      fetch(url, {\n        headers: {\n          Authorization: \"JWT \" + localStorage.token\n        },\n        method: \"POST\",\n        body: fd\n      }).then(response => response.json()).then(re => {\n        if (re.status == 200) {\n          this.setState({\n            uploaded: true\n          });\n        }\n\n        console.log(re);\n      });\n    };\n\n    this.signout = () => {\n      localStorage.clear();\n      this.setState({\n        logout: true\n      });\n    };\n\n    this.fileName = event => {\n      this.setState({\n        fileName: event.target.value\n      });\n    };\n\n    this.fileSave = () => {\n      const url = \"http://localhost:5000/api/save\";\n      let data = [localStorage.username, this.state.fileName];\n      fetch(url, {\n        headers: {\n          Authorization: \"JWT \" + localStorage.token\n        },\n        method: \"POST\",\n        body: JSON.stringify(data)\n      }).then(response => response.json()).then(re => {\n        console.log(re);\n      });\n    };\n\n    this.fileDigitize = () => {\n      const url = \"http://localhost:5000/api/tr\";\n      fetch(url, {\n        headers: {\n          Authorization: \"JWT \" + localStorage.token\n        },\n        method: \"POST\"\n      }).then(response => response.json()).then(dam => {\n        console.log(dam);\n        this.setState({\n          dam: JSON.parse(dam)\n        });\n      });\n    };\n\n    this.userFiles = () => {\n      this.setState({\n        gotoFiles: true\n      });\n    };\n  }\n\n  componentDidMount() {}\n\n  render() {\n    const columns = [{\n      Header: \"0\",\n      accessor: \"0\"\n    }, {\n      Header: \"1\",\n      accessor: \"1\"\n    }, {\n      Header: \"2\",\n      accessor: \"2\"\n    }, {\n      Header: \"3\",\n      accessor: \"3\"\n    }, {\n      Header: \"4\",\n      accessor: \"4\"\n    }, {\n      Header: \"5\",\n      accessor: \"5\"\n    }, {\n      Header: \"6\",\n      accessor: \"6\"\n    }];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      onChange: this.fileHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }\n    }), this.state.uploaded ? /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: \"green\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }\n    }, \"Uploaded\") : /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }\n    }, \"Not Uploaded\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.fileUpload,\n      className: \"btn btn-success mx-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }\n    }, \"Upload\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.fileDigitize,\n      className: \"btn btn-success mx-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }\n    }, \"Digitize\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"enter output file name to save\",\n      onChange: this.fileName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-success mx-1\",\n      onClick: this.fileSave,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }\n    }, \"Save File\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-success mx-1\",\n      onClick: this.userFiles,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }\n    }, \"User Files\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-success mx-1\",\n      onClick: () => this.signout(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }\n    }, \"Signout\"), /*#__PURE__*/React.createElement(ReactTable, {\n      columns: columns,\n      data: this.state.dam,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }\n    }), this.state.gotoFiles && /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/showfiles\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 34\n      }\n    }), this.state.logout && /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 31\n      }\n    }));\n  }\n\n}\n\nexport default MainTemplate;","map":{"version":3,"sources":["/home/noshu/react/test1/src/components/mainTemplate.js"],"names":["React","Component","ReactTable","Redirect","MainTemplate","state","posts","dam","imgFile","logout","gotoFiles","fileName","uploaded","fileHandler","event","setState","target","files","fileUpload","fd","FormData","append","url","fetch","headers","Authorization","localStorage","token","method","body","then","response","json","re","status","console","log","signout","clear","value","fileSave","data","username","JSON","stringify","fileDigitize","parse","userFiles","componentDidMount","render","columns","Header","accessor","color"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ReactTable from \"react-table-6\";\nimport { Redirect } from \"react-router-dom\";\nclass MainTemplate extends Component {\n  state = {\n    posts: [],\n    dam: [],\n    imgFile: null,\n    logout: false,\n    gotoFiles: false,\n    fileName: \"output\",\n    uploaded: false,\n  };\n  componentDidMount() {}\n  fileHandler = (event) => {\n    this.setState({ imgFile: event.target.files[0] });\n  };\n  fileUpload = () => {\n    const fd = new FormData();\n    fd.append(\"Image\", this.state.imgFile, \"test.jpg\");\n    const url = \"http://localhost:5000/api/uploads\";\n    fetch(url, {\n      headers: {\n        Authorization: \"JWT \" + localStorage.token,\n      },\n      method: \"POST\",\n      body: fd,\n    })\n      .then((response) => response.json())\n      .then((re) => {\n        if (re.status == 200) {\n          this.setState({ uploaded: true });\n        }\n        console.log(re);\n      });\n  };\n  signout = () => {\n    localStorage.clear();\n    this.setState({ logout: true });\n  };\n  fileName = (event) => {\n    this.setState({ fileName: event.target.value });\n  };\n  fileSave = () => {\n    const url = \"http://localhost:5000/api/save\";\n    let data = [localStorage.username, this.state.fileName];\n    fetch(url, {\n      headers: {\n        Authorization: \"JWT \" + localStorage.token,\n      },\n      method: \"POST\",\n      body: JSON.stringify(data),\n    })\n      .then((response) => response.json())\n      .then((re) => {\n        console.log(re);\n      });\n  };\n  fileDigitize = () => {\n    const url = \"http://localhost:5000/api/tr\";\n    fetch(url, {\n      headers: {\n        Authorization: \"JWT \" + localStorage.token,\n      },\n      method: \"POST\",\n    })\n      .then((response) => response.json())\n      .then((dam) => {\n        console.log(dam);\n        this.setState({ dam: JSON.parse(dam) });\n      });\n  };\n  userFiles = () => {\n    this.setState({ gotoFiles: true });\n  };\n\n  render() {\n    const columns = [\n      {\n        Header: \"0\",\n        accessor: \"0\",\n      },\n      {\n        Header: \"1\",\n        accessor: \"1\",\n      },\n      {\n        Header: \"2\",\n        accessor: \"2\",\n      },\n      {\n        Header: \"3\",\n        accessor: \"3\",\n      },\n      {\n        Header: \"4\",\n        accessor: \"4\",\n      },\n      {\n        Header: \"5\",\n        accessor: \"5\",\n      },\n      {\n        Header: \"6\",\n        accessor: \"6\",\n      },\n    ];\n    return (\n      <div className=\"container\">\n        <input type=\"file\" onChange={this.fileHandler}></input>\n        {this.state.uploaded ? (\n          <span style={{ color: \"green\" }}>Uploaded</span>\n        ) : (\n          <span>Not Uploaded</span>\n        )}\n        <button onClick={this.fileUpload} className=\"btn btn-success mx-1\">\n          Upload\n        </button>\n\n        <button onClick={this.fileDigitize} className=\"btn btn-success mx-1\">\n          Digitize\n        </button>\n        <input\n          type=\"text\"\n          placeholder=\"enter output file name to save\"\n          onChange={this.fileName}\n        ></input>\n        <button className=\"btn btn-success mx-1\" onClick={this.fileSave}>\n          Save File\n        </button>\n        <button className=\"btn btn-success mx-1\" onClick={this.userFiles}>\n          User Files\n        </button>\n        <button className=\"btn btn-success mx-1\" onClick={() => this.signout()}>\n          Signout\n        </button>\n        <ReactTable columns={columns} data={this.state.dam}></ReactTable>\n        {this.state.gotoFiles && <Redirect to=\"/showfiles\"></Redirect>}\n        {this.state.logout && <Redirect to=\"/login\" />}\n      </div>\n    );\n  }\n}\n\nexport default MainTemplate;\n"]},"metadata":{},"sourceType":"module"}