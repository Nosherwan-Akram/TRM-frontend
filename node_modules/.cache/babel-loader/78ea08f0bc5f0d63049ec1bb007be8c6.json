{"ast":null,"code":"var _jsxFileName = \"/home/noshu/react/test1/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport NavBar from \"./components/navbar\";\nimport Counters from \"./components/counters\";\nimport ReactTable from \"react-table-6\"; //import \"react-table/react-table.css\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      counters: [{\n        id: 1,\n        value: 0\n      }, {\n        id: 2,\n        value: 2\n      }, {\n        id: 3,\n        value: 3\n      }, {\n        id: 4,\n        value: 4\n      }],\n      posts: []\n    };\n\n    this.handleReset = () => {\n      const counters = this.state.counters.map(c => {\n        c.value = 0;\n        return c;\n      });\n      this.setState({\n        counters\n      });\n    };\n\n    this.handleIncrement = counter => {\n      console.log(counter);\n      const counters = [...this.state.counters];\n      const index = counters.indexOf(counter);\n      counters[index] = { ...counter\n      };\n      counters[index].value++;\n      this.setState({\n        counters\n      });\n    };\n\n    this.handleDelete = counterId => {\n      const counters = this.state.counters.filter(c => c.id !== counterId);\n      this.setState({\n        counters\n      });\n    };\n  }\n\n  componentDidMount() {\n    const url = \"https://jsonplaceholder.typicode.com/todos\";\n    fetch(url, {\n      method: \"GET\"\n    }).then(response => response.json()).then(posts => {\n      // console.log(posts);\n      this.setState({\n        posts: posts\n      });\n    });\n    const url2 = \"http://localhost:5000/tr_results\";\n    fetch(url2, {\n      method: \"GET\"\n    }).then(response => response.json()).then(posts => {\n      console.log(posts); //this.setState({ posts: posts });\n    });\n  }\n\n  render() {\n    const columns = [{\n      Header: \"User Id\",\n      accessor: \"userId\"\n    }, {\n      Header: \"Id\",\n      accessor: \"id\"\n    }, {\n      Header: \"Title\",\n      accessor: \"title\"\n    }, {\n      Header: \"Completed\",\n      accessor: \"completed\"\n    }];\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(NavBar, {\n      totalCounters: this.state.counters.filter(c => c.value !== 0).length,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"main\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Counters, {\n      counters: this.state.counters,\n      onDelete: this.handleDelete,\n      onReset: this.handleReset,\n      onIncrement: this.handleIncrement,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/noshu/react/test1/src/App.js"],"names":["React","Component","NavBar","Counters","ReactTable","App","state","counters","id","value","posts","handleReset","map","c","setState","handleIncrement","counter","console","log","index","indexOf","handleDelete","counterId","filter","componentDidMount","url","fetch","method","then","response","json","url2","render","columns","Header","accessor","length"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport NavBar from \"./components/navbar\";\nimport Counters from \"./components/counters\";\nimport ReactTable from \"react-table-6\";\n//import \"react-table/react-table.css\";\n\nclass App extends Component {\n  state = {\n    counters: [\n      { id: 1, value: 0 },\n      { id: 2, value: 2 },\n      { id: 3, value: 3 },\n      { id: 4, value: 4 }\n    ],\n    posts: []\n  };\n  componentDidMount() {\n    const url = \"https://jsonplaceholder.typicode.com/todos\";\n    fetch(url, {\n      method: \"GET\"\n    })\n      .then(response => response.json())\n      .then(posts => {\n        // console.log(posts);\n        this.setState({ posts: posts });\n      });\n\n    const url2 = \"http://localhost:5000/tr_results\";\n    fetch(url2, {\n      method: \"GET\"\n    })\n      .then(response => response.json())\n      .then(posts => {\n        console.log(posts);\n        //this.setState({ posts: posts });\n      });\n  }\n  handleReset = () => {\n    const counters = this.state.counters.map(c => {\n      c.value = 0;\n      return c;\n    });\n    this.setState({ counters });\n  };\n  handleIncrement = counter => {\n    console.log(counter);\n    const counters = [...this.state.counters];\n\n    const index = counters.indexOf(counter);\n    counters[index] = { ...counter };\n    counters[index].value++;\n    this.setState({ counters });\n  };\n  handleDelete = counterId => {\n    const counters = this.state.counters.filter(c => c.id !== counterId);\n    this.setState({ counters });\n  };\n\n  render() {\n    const columns = [\n      {\n        Header: \"User Id\",\n        accessor: \"userId\"\n      },\n      {\n        Header: \"Id\",\n        accessor: \"id\"\n      },\n      {\n        Header: \"Title\",\n        accessor: \"title\"\n      },\n      {\n        Header: \"Completed\",\n        accessor: \"completed\"\n      }\n    ];\n    return (\n      <React.Fragment>\n        <NavBar\n          totalCounters={this.state.counters.filter(c => c.value !== 0).length}\n        />\n        <main className=\"container\">\n          <Counters\n            counters={this.state.counters}\n            onDelete={this.handleDelete}\n            onReset={this.handleReset}\n            onIncrement={this.handleIncrement}\n          ></Counters>\n        </main>\n        {/* <ReactTable columns={columns} data={this.state.posts}></ReactTable> */}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}